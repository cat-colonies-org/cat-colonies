# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type CeaseCause {
  id: Int!
  description: String!
  cats: [Cat!]!
}

type Town {
  id: Int!
  name: String!
  colonies: [Colony!]!
}

type Environment {
  id: Int!
  description: String!
  colonies: [Colony!]!
}

type LocationType {
  id: Int!
  description: String!
  colonies: [Colony!]
}

type Colony {
  id: Int!
  createdAt: DateTime!
  address: String!
  locationTypeId: Int
  locationType: LocationType!
  cats: [Cat!]
  environmentId: Int
  environment: Environment!
  townId: Int!
  town: Town!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Color {
  id: Int!
  description: String!
  cats: [Cat!]!
}

type EyeColor {
  id: Int!
  description: String!
  cats: [Cat!]!
}

type Pattern {
  id: Int!
  description: String!
  cats: [Cat!]!
}

type Cat {
  id: Int!
  createdAt: DateTime!
  ceasedAt: DateTime
  ceaseCauseId: Int
  ceaseCause: CeaseCause
  birthYear: Int
  sterilized: Boolean
  sterilizedAt: DateTime
  colonyId: Int
  colony: Colony
  colorId: Int
  color: Color
  patternId: Int
  pattern: Pattern
  gender: Gender
  kitten: Boolean
  eyeColorId: Int
  eyeColor: EyeColor
  imageURL: String
  annotations: [Annotation!]
}

""""""
enum Gender {
  Male
  Female
}

type Annotation {
  id: Int!
  annotation: String!
  date: DateTime!
  catId: Int!
  cat: Cat!
}

type RemoveCatResult {
  result: Boolean!
}

type RemoveColorResult {
  result: Boolean!
}

type RemovePatternResult {
  result: Boolean!
}

type User {
  id: Int!
  name: String!
  surnames: String!
  idCard: String!
  phoneNumber: Int!
  email: String!
  createdAt: DateTime!
  ceasedAt: DateTime
  authorizesWhatsApp: Boolean
}

type Query {
  cats(birthYear: Int, sterilized: Boolean, sterilizedAt: DateTime, colonyId: Int, colorId: Int, patternId: Int, eyesId: Int, gender: Gender, kitten: Boolean): [Cat!]
  cat(id: Int!): Cat
  colonies(address: String, locationTypeId: Int, environmentId: Int, townId: Int): [Colony!]!
  colony(id: Int!): Colony
  colors(description: String): [Color!]
  color(id: Int!): Color
  eyeColors: [EyeColor!]!
  eyeColor(id: Int!): EyeColor!
  patterns(description: String): [Pattern!]
  pattern(id: Int!): Pattern
  users(name: String, surnames: String, idCard: String, phoneNumber: Int, email: String, authorizesWhatsApp: Boolean): [User!]
  user(id: Int!): User!
}

type Mutation {
  createCat(createCatInput: CreateCatInput!): Cat!
  updateCat(updateCatInput: UpdateCatInput!): Cat!
  removeCat(id: Int!): RemoveCatResult!
  createColony(createColonyInput: CreateColonyInput!): Colony!
  updateColony(updateColonyInput: UpdateColonyInput!): Colony!
  removeColony(id: Int!): Colony!
  createColor(createColorInput: CreateColorInput!): Color!
  updateColor(updateColorInput: UpdateColorInput!): Color!
  removeColor(id: Int!): RemoveColorResult!
  createEyeColor(createEyeColorInput: CreateEyeColorInput!): EyeColor!
  updateEyeColor(updateEyeColorInput: UpdateEyeColorInput!): EyeColor!
  removeEyeColor(id: Int!): EyeColor!
  createPattern(createPatternInput: CreatePatternInput!): Pattern!
  updatePattern(updatePatternInput: UpdatePatternInput!): Pattern!
  removePattern(id: Int!): RemovePatternResult!
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(updateUserInput: UpdateUserInput!): User!
  removeUser(id: Int!): User!
}

input CreateCatInput {
  birthYear: Int
  sterilized: Boolean
  sterilizedAt: DateTime
  colonyId: Int
  colorId: Int
  patternId: Int
  eyesId: Int
  gender: Gender
  kitten: Boolean
}

input UpdateCatInput {
  birthYear: Int
  sterilized: Boolean
  sterilizedAt: DateTime
  colonyId: Int
  colorId: Int
  patternId: Int
  eyesId: Int
  gender: Gender
  kitten: Boolean
  id: Int!
}

input CreateColonyInput {
  address: String!
  locationTypeId: Int
  environmentId: Int
  townId: Int!
}

input UpdateColonyInput {
  address: String
  locationTypeId: Int
  environmentId: Int
  townId: Int
  id: Int!
}

input CreateColorInput {
  description: String!
}

input UpdateColorInput {
  description: String
  id: Int!
}

input CreateEyeColorInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateEyeColorInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreatePatternInput {
  description: String!
}

input UpdatePatternInput {
  description: String
  id: Int!
}

input CreateUserInput {
  name: String!
  surnames: String!
  idCard: String!
  phoneNumber: Int!
  email: String!
  authorizesWhatsApp: Boolean
}

input UpdateUserInput {
  name: String!
  surnames: String!
  idCard: String!
  phoneNumber: Int!
  email: String!
  authorizesWhatsApp: Boolean
  id: Int!
}

type Subscription {
  catAdded: Cat!
  catUpdated: Cat!
  catRemoved: Cat!
  colonyAdded: Colony!
  colonyUpdated: Colony!
  colonyRemoved: Colony!
  colorAdded: Color!
  colorUpdated: Color!
  colorRemoved: Color!
  patternAdded: Pattern!
  patternUpdated: Pattern!
  patternRemoved: Pattern!
}
