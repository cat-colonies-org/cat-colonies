version: '3.2'

services:
  database:
    image: daviddq/cat-colonies-database:latest
    container_name: database
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - DB_NAME
      - DB_PASS
      - DB_USER
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - network
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready']
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL
      - PGADMIN_DEFAULT_PASSWORD
      - PGADMIN_LISTEN_PORT
    networks:
      - network
    ports:
      - ${PGADMIN_LISTEN_PORT}:${PGADMIN_LISTEN_PORT}
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    restart: unless-stopped

  redis:
    container_name: redis
    image: redis:6.2.5-alpine
    networks:
      - network
    restart: unless-stopped

  service:
    image: daviddq/cat-colonies-service:latest
    container_name: service
    environment:
      - NODE_ENV
      - BACKEND_PORT
      - DB_HOST
      - DB_PORT
      - DB_NAME
      - DB_SYNCHRONIZE
      - DB_USER
      - DB_PASS
      - JWT_SECRET
      - JWT_EXPIRES_IN
      - PICTURES_BUCKET
      - THUMBNAIL_WIDTH
      - THUMBNAIL_HEIGHT
      - STORAGE_ENDPOINT
      - STORAGE_PORT
      - STORAGE_SSL
      - STORAGE_ACCESS_KEY
      - STORAGE_SECRET_KEY
    networks:
      - network
    ports:
      - ${BACKEND_PORT:-8080}:${BACKEND_PORT:-8080}

    restart: unless-stopped

  web:
    image: daviddq/cat-colonies-web:latest
    container_name: web
    restart: unless-stopped
    ports:
      - ${FRONTEND_PORT:-80}:${FRONTEND_PORT:-80}
    networks:
      - network

volumes:
  postgres-data:
    external: false
  pgadmin-data:
    external: false

networks:
  network:
